short orderOfDayInYear(short day, short month, short year)
{
    short totalDays = day;
    for (int i = 1; i < month; i++)
    {
        totalDays += numOfDaysInMonth(year, i);
    }
    return totalDays;
}

stDate getDateFromDayOrderInYear(short dayOrder, short year)
{
    stDate date;
    date.year = year;
    date.month = 1;
    short remainingDays = dayOrder;
    short nDaysInMonth;
    while (true)
    {
        nDaysInMonth = numOfDaysInMonth(year, date.month);
        if (remainingDays > nDaysInMonth)
        {
            remainingDays -= nDaysInMonth;
            date.month++;
        }
        else
        {
            date.day = remainingDays;
            break;
        }
    }
    return date;
}

stDate getDateAfterAddDays(short daysToAdd, short day, short month, short year)
{
    stDate date;
    date.year = year;
    short dayOrder = orderOfDayInYear(day, month, year);
    short remainingDaysToCompleteYear = tes::numOfDaysInYear(year) - dayOrder;
    while (true)
    {
        if (remainingDaysToCompleteYear < daysToAdd)
        {
            date.year++;
            daysToAdd -= remainingDaysToCompleteYear;
            remainingDaysToCompleteYear = tes::numOfDaysInYear(date.year);
            dayOrder = 0;
        }
        else
        {
            date = getDateFromDayOrderInYear(daysToAdd + dayOrder, date.year);
            break;
        }
    }
    return date;
}

int main()
{ 
    short day = tes::readNum("Please enter a day");
    short month = tes::readNum("Please enter a month");
    short year = tes::readNum("Please enter a year?"); 
    short daysToAdd = tes::readNum("How many days to add?");
    
    stDate date = getDateAfterAddDays(daysToAdd, day, month, year);
    printf("\n\nDate after adding [%d] days is: %d/%d/%d\n", daysToAdd, date.day, date.month, date.year);
    return 0;
}